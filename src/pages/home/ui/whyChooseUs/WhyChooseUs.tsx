import { Box, Typography } from "@mui/material";

// const cards = [
//   {
//     image: FourYearsIcon,
//     title: "4 –≥–æ–¥–∞ –≤ SMM",
//     text: "‚Äî —ç—Ç–æ –≤–Ω—É—à–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫ –≤ —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è—é—â–µ–π—Å—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏. –ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã –≤ —Å–≤–æ–µ–º –¥–µ–ª–µ, –º—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º—Å—è, –≤–Ω–µ–¥—Ä—è—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –≤—Å–µ–≥–¥–∞ –±—ã–ª–∏ –Ω–∞ —à–∞–≥ –≤–ø–µ—Ä–µ–¥–∏",
//     buttonText: "–°–º–æ—Ç—Ä–µ—Ç—å showreel",
//     link: "/test",
//   },
//   {
//     image: EightSpeacialistsIcon,
//     title: "8 —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –æ–¥–Ω–æ–º –ø–∞–∫–µ—Ç–µ",
//     text: "–ù–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å 8+ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: –ø—Ä–æ–µ–∫—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –∫–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä, —Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥, –≤–∏–¥–µ–æ–≥—Ä–∞—Ñ, –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä, –º–æ–Ω—Ç–∞–∂–µ—Ä, —Å—Ç–æ—Ä–∏—Å–º–µ–π–∫–µ—Ä, –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä",
//     buttonText: "–°–º–æ—Ç—Ä–µ—Ç—å –∫–µ–π—Å—ã",
//     link: "/test",
//   },
//   {
//     image: SocialIcon,
//     title: "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
//     text: "–ü–æ—Å–∞–¥–∏–ª–∏ 50 –¥–µ—Ä–µ–≤—å–µ–≤, –ø–æ–º–æ–≥–∞–µ–º –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–º—É —Ñ–æ–Ω–¥—É",
//     buttonText: "–í–∏–¥–µ–æ–æ—Ç—á–µ—Ç—ã —Ç—É—Ç",
//     link: "/test",
//   },
//   {
//     image: CupIcon,
//     title: "–í—ã—Ä–∞—Å—Ç–∏–ª–∏ –±–ª–æ–≥–≥–µ—Ä–∞ –º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∞ (3üçã)",
//     text: "",
//     buttonText: "nurekensky on TikTok",
//     link: "/test",
//   },
//   {
//     image: ThreeThousandIcon,
//     title: "3000 —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π",
//     text: "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ–ª–µ–µ —á–µ—Ç—ã—Ä–µ—Ö —Ç–∞—Ä–≥–µ—Ç–æ–≤",
//     buttonText: "–°–º–æ—Ç—Ä–µ—Ç—å –∫–µ–π—Å—ã",
//     link: "/test",
//   },
// ];

export const WhyChooseUs = () => {
  // const theme = useTheme();
  // const navigate = useNavigate();
  // const [activeStep, setActiveStep] = React.useState(0);
  // const maxSteps = cards.length;

  // const handleNext = () => {
  //   setActiveStep((prevActiveStep) => (prevActiveStep + 1) % maxSteps);
  // };

  // const handleBack = () => {
  //   setActiveStep(
  //     (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps
  //   );
  // };

  // const handleStepChange = (step: number) => {
  //   setActiveStep(step);
  // };

  // const handleButtonClick = (link: string) => {
  //   navigate(link);
  // };

  return (
    <Box sx={{ px: { xs: 2, sm: 4, md: 8 }, py: { xs: 2, sm: 4, md: 8 } }}>
      <Typography
        variant="h2"
        component="h1"
        sx={{
          fontWeight: 400,
          color: "#000",
          textTransform: "uppercase",
          fontSize: { xs: "24px", sm: "28px", md: "32px", lg: "64px" },
          mb: { xs: 2, sm: 3, md: 5 },
          textAlign: "start",
        }}
      >
        –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
      </Typography>
    </Box>
  );
};
